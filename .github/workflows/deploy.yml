name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3 # was "v2" before
        with:
          fetch-depth: 0

      - name: Use Node.JS ${{ matrix.node-version }}
        uses: actions/setup-node@v3 # was "v2" before
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build and Push Docker Images
        run: |
          docker-compose build
          docker-compose push

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up PostgresSQL
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" > .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

      - name: Show Environment Variables
        run: cat .env
#        with:
#          POSTGRES_USER: ${{ secrets.POSTGRES_USER }} # Can be found as part of the Deploy Hook
#          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }} # Can be found as part of the Deploy Hook
#          POSTGRES_DB: ${{ secrets.POSTGRES_DB }} # Can be found as part of the Deploy Hook
#          POSTGRES_LOCAL_PORT: ${{ secrets.POSTGRES_LOCAL_PORT }} # Can be found as part of the Deploy Hook
#          api-key: ${{ secrets.RENDER_API_KEY }}

      - name: Deploy to Production
        run: |
          docker-compose -f docker-compose.yml up -d
